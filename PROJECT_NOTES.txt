Project Notes（進捗管理アプリ）

概要
- 小規模チーム向け「クラス別進捗とメモ」の管理アプリ（JSP/Servlet）。
- JDBC（MariaDB/MySQL）で永続化／JNDI DataSource。未設定時はメモリ実装で動作。

技術スタック
- Java 17 / Servlet 4（javax.*）/ JSP + JSTL 1.2
- Maven（WAR）/ Tomcat 9
- DB: MariaDB/MySQL（HeidiSQL 等で管理）

構成（主なパッケージ/ファイル）
- model: ClassEntry, Memo（memoDetail あり）
- repository: InMemoryStore（クラス⇄メモ関連）, JdbcStore（memo_detail / class_memo 対応）, SchemaMissingException
- web: ClassListServlet, ClassDetailServlet, ClassEditServlet, ClassDeleteServlet,
       MemoListServlet（一覧廃止→/classesへリダイレクト）, MemoManageServlet（新規/編集/削除）, CharsetFilter,
       AuthFilter（認証保護）, LoginServlet, LogoutServlet, HealthServlet
- webapp: index.jsp（ログイン/メニュー）, list.jsp（カードUI）, detail.jsp（クラス＋メモ統合表示）, class_* / memo_* JSP,
          assets/app.css, assets/app.js

実装状況（2025-09-07）
- ログイン認証（セッション式）
  - index.jsp からログイン。AuthFilter で全ページ保護（/assets, /, /index.jsp, /login, /logout を除外）。
  - 認証情報は環境変数 AUTH_USER/AUTH_PASS を優先。未設定時は web.xml の管理者（admin/changeit）。
- 画面
  - 一覧（/classes）: テーブル→カードUIに刷新（詳細/更新/削除のボタン）。
  - 詳細（/classes/{id}）: クラス情報カード＋メモ一覧（上帯=type/title/created、下枠=detail）。
  - メモ（/memo/new|edit|delete）: back パラメータでクラス詳細に戻る。フォーム action を固定し動作安定化。
  - 共通CSS/JS: カード/ボタン、確認ダイアログ（data-confirm）、スムーズスクロール。
- メモのクラス紐付け（重要）
  - InMemory: classId→memoId のマップを保持。listMemos(classId)、addMemo(classId, m)、deleteMemo(classId, id)。
  - JDBC: class_memo でクラス⇄メモを関連。memo_detail 列に対応（列未追加時はフォールバック）。
- 健康監視: /healthz（DB OKで ok）。
- セッション: session-timeout=120、HttpOnly クッキー、cookie-config/tracking-mode のスキーマ順に整備。

DB スキーマ（運用版）
CREATE TABLE classes (
  class_id INT AUTO_INCREMENT PRIMARY KEY,
  class_name VARCHAR(255) NOT NULL,
  class_created VARCHAR(100) NOT NULL,
  status TEXT
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE memos (
  memo_id INT AUTO_INCREMENT PRIMARY KEY,
  memo_type TEXT NOT NULL,
  memo_title VARCHAR(255) NOT NULL,
  memo_created VARCHAR(100),
  memo_detail TEXT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE class_memo (
  class_id INT NOT NULL,
  memo_id  INT NOT NULL,
  PRIMARY KEY (class_id, memo_id),
  CONSTRAINT fk_cm_class FOREIGN KEY (class_id) REFERENCES classes(class_id) ON DELETE CASCADE,
  CONSTRAINT fk_cm_memo  FOREIGN KEY (memo_id)  REFERENCES memos(memo_id)  ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

JNDI（ローカル開発例）
- META-INF/context.xml:
  - name: jdbc/progress
  - url: jdbc:mariadb://localhost:3306/taskall?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC
  - username/password: 環境に合わせて設定

ビルド/デプロイ
- Maven: mvn -q -DskipTests package → target/progress-app-0.0.1-SNAPSHOT.war
- Tomcat9: webapps/progress-app.war へ配置 → 自動展開。
- 認証（本番）: AUTH_USER / AUTH_PASS（環境変数）で上書き。
- 監視: /healthz（ヘルスチェックに使用）。
- Raspberry Pi/systemd 例: DEPLOY_PI.md を参照。

既知の注意点
- Tomcat 10（jakarta.*）では不可。Tomcat 9（javax.*）必須。
- web.xml の session-config は「cookie-config → tracking-mode」の順。cookie-config は「name→http-only→secure」。
- DB テーブル未作成時はフォールバック動作（一覧に警告 or 全メモ）。運用では DDL を必ず適用。

今後の候補
- HTTPS 化（nginx 経由）と Secure/SameSite クッキー運用。
- 入力バリデーションとエラーメッセージ整備。
- 検索/ソート/ページネーション（クラス/メモ）。
